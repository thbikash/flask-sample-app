name: Flask CI

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Tests
        run: echo "No tests yet for Flask app"

      - name: Package app
        run: |
          mkdir -p dist
          rsync -av --progress . dist --exclude dist --exclude .git --exclude .github


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app-artifact
          path: ./dist

                # ðŸ”¹ Docker: login, build, push
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build Docker image
      #   run: |
      #     docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-sample-app:${{ github.run_id }} .

      # - name: Push Docker image
      #   run: |
      #     docker push ${{ secrets.DOCKER_USERNAME }}/flask-sample-app:${{ github.run_id }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/flask-sample-app
          VERSION=${{ github.run_id }}
          docker build -t $IMAGE_NAME:$VERSION -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest
    

      # (optional but handy) also push 'latest'
      - name: Tag & push :latest
        run: |
          docker tag ${{ secrets.DOCKER__USERNAME }}/flask-sample-app:${{ github.run_id }} ${{ secrets.DOCKER__USERNAME }}/flask-sample-app:latest
          docker push ${{ secrets.DOCKER__USERNAME }}/flask-sample-app:latest
          

      # Save the tag so CD can read it as an artifact later
      - name: Save Docker metadata
        run: echo "docker_tag=${{ github.run_id }}" > docker-metadata.txt

      - name: Upload Docker metadata
        uses: actions/upload-artifact@v4
        with:
          name: docker-metadata
          path: docker-metadata.txt
