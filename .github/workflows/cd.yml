name: CD Deployment

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: 'CI Run ID to deploy'
        required: true

permissions:
  id-token: write   # required for OIDC
  contents: read    # required for actions/checkout and GH API

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Download artifact from CI workflow
      - name: Download artifact from CI run
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ARTIFACT_NAME=python-app-artifact
          RUN_ID=${{ github.event.inputs.run_id }}
          echo "Downloading artifact $ARTIFACT_NAME from CI run $RUN_ID"

          DOWNLOAD_URL=$(gh api \
            -H "Accept: application/vnd.github+json" \
            repos/${{ github.repository }}/actions/runs/$RUN_ID/artifacts \
            -q ".artifacts[] | select(.name==\"$ARTIFACT_NAME\") | .archive_download_url")

          if [ -z "$DOWNLOAD_URL" ]; then
            echo "❌ Artifact not found!"
            exit 1
          fi

          echo "✅ Artifact URL: $DOWNLOAD_URL"
          curl -L -H "Authorization: token $GH_TOKEN" -o artifact.zip "$DOWNLOAD_URL"
          unzip -o artifact.zip -d python-app-artifact

      # 3️⃣ Login to Azure with OIDC
      - name: Azure Login (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # 4️⃣ Deploy to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: TaskManagerDemo   # your App Service name
          slot-name: 'production'
          package: './python-app-artifact'

          